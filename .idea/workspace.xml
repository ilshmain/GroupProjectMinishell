<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakeRunConfigurationManager" shouldGenerate="true" shouldDeleteObsolete="true">
    <generated>
      <config projectName="checkMinishell" targetName="checkMinishell" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="fd60c9d3-2da8-4598-8b27-9c8c919dcfda" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/Makefile2" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/C.includecache" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/C.includecache" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/DependInfo.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/DependInfo.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/build.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/build.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/cmake_clean.cmake" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/cmake_clean.cmake" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/depend.internal" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/depend.internal" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/depend.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/depend.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/flags.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/flags.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/link.txt" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/link.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/progress.make" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/progress.make" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/logica/logic.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/logica/logic.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/main.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/main.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/bslshWorkPage.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/bslshWorkPage.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/preUsers.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/preUsers.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/quotWorkPage.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/quotWorkPage.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/redirWorkPage.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/redirWorkPage.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/servFns.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/pars/servFns.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/work_pipe/pipex_bonus.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/work_pipe/pipex_bonus.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/work_pipe/pipex_bonus_utils.c.o" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/checkMinishell.dir/source/work_pipe/pipex_bonus_utils.c.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/CMakeFiles/progress.marks" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/Testing/Temporary/LastTest.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/checkMinishell" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/checkMinishell" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmake-build-debug/checkMinishell.cbp" beforeDir="false" afterPath="$PROJECT_DIR$/cmake-build-debug/checkMinishell.cbp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/file1" beforeDir="false" afterPath="$PROJECT_DIR$/file1" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/file2" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/include/structs_minishell.h" beforeDir="false" afterPath="$PROJECT_DIR$/include/structs_minishell.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/minishell" beforeDir="false" afterPath="$PROJECT_DIR$/minishell" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/Libft/libft.a" beforeDir="false" afterPath="$PROJECT_DIR$/source/Libft/libft.a" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/builts/cd.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/builts/cd.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/builts/echo.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/builts/echo.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/builts/export.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/builts/export.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/builts/unset.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/builts/unset.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/logica/logic.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/logica/logic.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/logica/logic.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/logica/logic.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/main.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/main.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/bslshWorkPage.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/bslshWorkPage.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/exec.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/exec.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/exec.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/exec.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/preUsers.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/preUsers.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/quotWorkPage.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/quotWorkPage.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/redirWorkPage.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/redirWorkPage.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/pars/servFns.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/pars/servFns.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/work_pipe/pipex_bonus.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/work_pipe/pipex_bonus.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/work_pipe/pipex_bonus.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/work_pipe/pipex_bonus.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils.c" beforeDir="false" afterPath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils.c" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils.o" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils1.o" beforeDir="false" afterPath="$PROJECT_DIR$/source/work_pipe/pipex_bonus_utils1.o" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/CMakeLists.txt" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="ProjectId" id="1zjMzca5ZLZh56l7BcPSZXEFi9v" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="RunOnceActivity.cidr.known.project.marker" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="cf.first.check.clang-format" value="false" />
    <property name="cidr.known.project.marker" value="true" />
    <property name="cmake.loaded.for.project" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
  </component>
  <component name="RunManager">
    <configuration name="checkMinishell" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="checkMinishell" TARGET_NAME="checkMinishell" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="checkMinishell" RUN_TARGET_NAME="checkMinishell">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="fd60c9d3-2da8-4598-8b27-9c8c919dcfda" name="Changes" comment="" />
      <created>1634657309643</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1634657309643</updated>
      <workItem from="1634657312221" duration="88000" />
      <workItem from="1634657432997" duration="2342000" />
      <workItem from="1634711154675" duration="27000" />
      <workItem from="1636270230965" duration="58000" />
      <workItem from="1636270299585" duration="1000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/logic" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
    <option name="RECENT_FILTERS">
      <map>
        <entry key="Branch">
          <value>
            <list>
              <RecentGroup>
                <option name="FILTER_VALUES">
                  <option value="master" />
                </option>
              </RecentGroup>
            </list>
          </value>
        </entry>
      </map>
    </option>
    <option name="oldMeFiltersMigrated" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="com.jetbrains.cidr.execution.debugger.OCBreakpointType">
          <url>file://$PROJECT_DIR$/source/work_pipe/pipex_bonus.c</url>
          <line>89</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>